

DONE 1. make a git initialization so i have version control 
        1.2 make sure there are many different versions (branches)

2. push to github so i can later try out how can i clone my project and what kind of problems might occur 

3. make sure there is a requirement.txt file so i can install my dependencies later on a different machine

DONE 4. use brew "tree" command helper to see the structure of the project:

├── flaskblog.py
├── forms.py
├── site.db
├── static
│   └── main.css
└── templates
    ├── about.html
    ├── home.html
    ├── layout.html
    ├── login.html
    └── register.html

5. remember that i have to setup the database locally again if i am on the new machine, so i might need to create it again on a new machine

6. always add a note file with howTo instructions about the version 

7. somehow i did not git the venv, so i have to make something about the requirement...


Notiz:

"python3 flaskblog.py" is better instead of "flask run" 

!! BEFORE WORK ON THE PROJECT:

- activate VENV: 
    alex in ~/Documents/code/projects/flaskApp
    > source flaskBlogVenv/bin/activate 
- what BRANCH i am working at right now ? Create a new branch for a new version 
- "git status" for unchecked files before start
- open howTo for the current version



!! AFTER WORK ON THE PROJECT:

- deactivate venv
- is an updated howTo file included before push ?
- schauen ob alle Dateien gespechert sind 
- nur dann commit machen und push
- check ob alles auf der Seite des Githabes synchronisiert ist 


Strukture: 

- immer die alter Version des Projektes bei sich haben (anderes Bildschirm)
- mit Kommentaren des alten Projektes die neue Version des Projektes befüllen 

!! AT THE END OF THE PROJECT I HAVE TO REWORK ALL VERSIONS (BRANCHES) SO THE COMMENTS ARE UP TO IT'S VERSION, NOT JUST EVERYTHING IS COMMENTED 